version: '3.8'

services:
# define the mongo servers that will act as replicas here,
# setup the hostname ports, startup command
  mongo1:
    hostname: mongo1
    image: mongo:5
    expose:
      - 27017
    ports:
      - 30001:27017
    restart: always
    command: mongod --replSet my-mongo-set

#   mongo2:
#     hostname: mongo2
#     image: mongo
#     expose:
#       - 27017
#     ports:
#       - 30002:27017
#     restart: always
#     command: mongod --replSet my-mongo-set
#   mongo3:
#     hostname: mongo3
#     image: mongo
#     expose:
#       - 27017
#     ports:
#       - 30003:27017
#     restart: always
#     command: mongod --replSet my-mongo-set

# finally, we can define the initialization server
# this runs the `rs.initiate` command to intialize
# the replica set and connect the three servers to each other
  mongoinit:
    image: mongo:5
    # this container will exit after executing the command
    restart: "no"
    depends_on:
      - mongo1
    command: >
      mongo --host mongo1:27017 --eval
      '
      db = (new Mongo("localhost:27017")).getDB("test");
      config = {
      "_id" : "my-mongo-set",
      "members" : [
        {
          "_id" : 0,
          "host" : "mongo1:27017"
        }
      ]
      };
      rs.initiate(config);
      '
